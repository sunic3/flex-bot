import discord
from discord.ext import commands
from discord.ext.commands import has_permissions, errors

from bottools import wordend, data_read, data_write, exp, postix
from cogs.bot import channel_check, ChannelException
from cfg import version

import traceback
import asyncio
import typing
import json
import os


class Serv(commands.Cog):

    def __init__(self, client):
        self.client = client
        self.members = {}
        self.banned = {}

    @commands.Cog.listener()
    async def on_guild_join(self, guild):
        info = discord.utils.find(lambda x: x.permissions_for(guild.me).send_messages, guild.text_channels)
        embed = discord.Embed(colour=discord.Colour.green(), title=f'–ü—Ä–∏–≤–µ—Ç–∏–∫, {guild.name}:heart_exclamation:',
                              description=f'–°–ø–∞—Å–∏–±–æ—á–∫–∏ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä, {guild.owner.mention} '
                                          f':revolving_hearts:\n–í –æ—Å–Ω–æ–≤–Ω–æ–º, —è –≤—ã–ø–æ–ª–Ω—è—é —Ñ—É–Ω–∫—Ü–∏–∏ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞. '
                                          f'–ù–∞–ø–∏—à–∏ `.m.h` —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö. –†–µ–∫–æ–º–µ–Ω–¥—É—é —Å–¥–µ–ª–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª '
                                          f'–¥–ª—è –º—É–∑—ã–∫–∏ –∏ –ø—Ä–æ–ø–∏—Å–∞—Ç—å —Ç–∞–º `.music`.\n–ï—Å–ª–∏ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ '
                                          f'—É–∑–Ω–∞—Ç—å –æ –¥—Ä—É–≥–∏—Ö –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö, –Ω–∞–ø–∏—à–∏ `.help`'
                              )
        embed.set_image(url='https://i.ibb.co/QmfMN1b/image.gif')
        embed.set_footer(text=f'–≤–µ—Ä—Å–∏—è {version}')
        await info.send(embed=embed)
        os.mkdir(f'{guild.id}')
        d = {'autoroles': {}, 'autoroles_post_id': None, 'genders': [], 'dj': None, 'notices': [],
             'music_id': None, 'channels': [], 'current': None, 'now': True, 'notice': True, 'count': 5}
        data_write(guild, d)
        with open(f"{guild.id}/history.json", "w") as f:
            json.dump([], f)

    @commands.Cog.listener()
    async def on_guild_remove(self, guild):
        dir_name = f'{guild.id}'
        for file in os.listdir(dir_name):
            file_path = os.path.join(dir_name, file)
            if os.path.isfile(file_path):
                os.remove(file_path)
        os.rmdir(dir_name)

    @commands.Cog.listener()
    async def on_member_join(self, member):
        if not member.bot:
            d = data_read(member.guild)
            embed = discord.Embed(
                colour=discord.Colour.from_rgb(r=43, g=181, b=81),
                description=f'{member.mention} –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä **'
                            f'{member.guild.name}**:heart_exclamation:\n\n'
            )
            embed.set_thumbnail(url=member.guild.icon_url)
            embed.set_author(name='–Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞', icon_url=member.avatar_url)
            if d['autoroles_post_id']:
                msg = await discord.utils.get(member.guild.text_channels,
                                              id=int(d['autoroles_post_id'].split(',')[0]))\
                    .fetch_message(int(d['autoroles_post_id'].split(',')[1]))
                if msg:
                    embed.description += f'–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ [—ç—Ç–æ—Ç –ø–æ—Å—Ç]({msg.jump_url})' \
                        f'. –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –≤—Å–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è —Ä–æ–ª–∏.:love_you_gesture:\n\n'
            if d['genders']:
                role = discord.utils.get(member.guild.roles, id=d['genders'][0])
                await member.add_roles(role)
                embed.description += f'–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–±–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≥–µ–Ω–¥–µ—Ä–Ω–∞—è —Ä–æ–ª—å `{role.name}` :male_sign:. ' \
                    f'–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë - –ø—Ä–æ–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É `.g`'
            embed.set_footer(text='–í—Å–µ –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥—Å–º–æ—Ç—Ä–µ—Ç—å —Å –ø–æ–º–æ—â—å—é `.help`')
            if d['channels']:
                info = discord.utils.get(member.guild.text_channels, id=d['channels'][0])
            else:
                info = discord.utils.find(lambda x: x.permissions_for(member.guild.me).send_messages,
                                          member.guild.text_channels)
            await info.send(f'{member.mention}', delete_after=1)
            await info.send(embed=embed, delete_after=120)

    @commands.Cog.listener()
    async def on_member_remove(self, member):
        if not member.bot:
            d = data_read(member.guild)
            if d['autoroles_post_id']:
                msg = await discord.utils.get(member.guild.text_channels,
                                              id=int(d['autoroles_post_id'].split(',')[0])) \
                    .fetch_message(int(d['autoroles_post_id'].split(',')[1]))
                for e in d['autoroles'].keys():
                    try:
                        await msg.remove_reaction(e, member)
                    except Exception as e:
                        print(e)
                        continue

    @commands.command()
    @commands.check(channel_check)
    @has_permissions(administrator=True)
    async def set_genders(self, ctx, *roles: typing.Union[discord.Role, str]):
        s = ctx.message.author.guild
        if len(roles) == 0:
            r1 = await s.create_role(name='‚ôÇ', colour=discord.Colour.blue(), mentionable=True)
            r2 = await s.create_role(name='‚ôÄ', colour=discord.Colour(16711893), mentionable=True)
        elif len(roles) == 2:
            if isinstance(roles[0], discord.Role):
                r1 = roles[0]
                r2 = roles[1]
            else:
                r1 = await s.create_role(name=roles[0], colour=discord.Colour.blue(), mentionable=True)
                r2 = await s.create_role(name=roles[1], colour=discord.Colour(16711893), mentionable=True)
        else:
            raise errors.BadArgument
        d = data_read(ctx.guild)
        d['genders'] = [r1.id, r2.id]
        data_write(ctx.guild, d)
        await ctx.message.delete()
        await ctx.send(f'" —Ä–æ–ª–∏[`{r1.name}` –∏ `{r2.name}`] —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–∞–∫ –≥–µ–Ω–¥–µ—Ä–Ω—ã–µ :male_sign: :female_sign: ',
                       delete_after=40)

    @set_genders.error
    async def set_genders_error(self, ctx, error):
        await ctx.message.delete()
        if isinstance(error, errors.BadArgument):
            await ctx.send('–£–∫–∞–∑–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–µ–π –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ :monkey:', delete_after=40)
        elif isinstance(error, errors.MissingPermissions):
            await ctx.send('–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ :baby:', delete_after=40)
        elif isinstance(error, ChannelException):
            await error.do(ctx)
        else:
            await exp(ctx)

    @commands.command(name='set_roles')
    @has_permissions(administrator=True)
    async def set_roles_(self, ctx, *role: typing.Union[discord.Role, str]):
        if len(role) == 0:
            return await ctx.send(f'–¢—ã –∑–∞–±—ã–ª{postix(ctx)} —É–∫–∞–∑–∞—Ç—å —Ä–æ–ª–∏')
        try:
            embed = discord.Embed(
                title="–†–∞–∑–¥–∞—á–∞ —Ä–æ–ª–µ–π",
                description='',
                colour=discord.Colour.green()
            )
            if isinstance(role[0], str):
                if role[0] != '-i':
                    embed.description = role[0]+'\n\n'
                    if len(role) > 1 and isinstance(role[1], str) and role[1] == '-i':
                        pass
                    else:
                        embed.set_thumbnail(url=ctx.guild.icon_url)
                else:
                    embed.set_thumbnail(url=ctx.guild.icon_url)
            embed.set_footer(text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –≠–º–æ–¥–∑–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å\n')

            text, reacts = '', {}
            for i in range(len(role)):
                r = role[i]
                t = []
                if isinstance(r, discord.Role):
                    t.append(r)
                    if i < len(role)-1 and isinstance(role[i+1], str):
                        t.append(role[i+1])
                        i += 1
                        if i < len(role)-1 and isinstance(role[i+1], str):
                            t.append(f' --- {role[i+1]}')
                            i += 1
                        else:
                            t.append("")
                    else:
                        print('h1')
                        raise commands.errors.BadArgument
                    text += f'{t[1]} : {t[0].mention}{t[2]}\n\n'
                    reacts[t[1]] = t[0].id
            embed.description += text
            d = data_read(ctx.guild)
            if not d['autoroles_post_id']:
                sms = await ctx.send(embed=embed)
                await sms.pin()
                d['autoroles'] = reacts
                d['autoroles_post_id'] = f'{ctx.channel.id},{sms.id}'
                data_write(ctx.guild, d)
                for e in reacts:
                    await sms.add_reaction(e)
                await ctx.message.delete()
            else:
                new_sms = await ctx.send(f'–ü–æ—Å—Ç –¥–ª—è –≤—ã–¥–∞—á–∏ –∞–≤—Ç–æ—Ä–æ–ª–µ–π —É–∂–µ —Å—É—â–µ—Å–≤—É–µ—Ç :pushpin:\n–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π?')
                await new_sms.add_reaction('üÜï')
                await new_sms.add_reaction('üö´')

                def check(reaction, user):
                    return user == ctx.message.author
                try:
                    reaction, user = await self.client.wait_for('reaction_add', check=check, timeout=60)
                    if str(reaction.emoji) == 'üÜï':
                        if len(reacts) > 20:
                            await ctx.send('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç, —Ç.–∫. –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ 20 —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ '
                                           '—Å–æ–æ–±—â–µ–Ω–∏–µ :no_entry:', delete_after=40)
                            return
                        try:
                            msg_d = await discord.utils.get(ctx.guild.text_channels,
                                                            id=int(d['autoroles_post_id'].split(',')[0]))\
                                .fetch_message(int(d['autoroles_post_id'].split(',')[1]))
                            await msg_d.delete()
                        except discord.HTTPException:
                            pass
                        except AttributeError:
                            pass
                        d = data_read(ctx.guild)
                        sms = await ctx.send(embed=embed)
                        await sms.pin()
                        d['autoroles'] = reacts
                        d['autoroles_post_id'] = f'{ctx.channel.id},{sms.id}'
                        data_write(ctx.guild, d)
                        for e in reacts:
                            await sms.add_reaction(e)
                        await ctx.message.delete()
                    await new_sms.delete()
                except asyncio.TimeoutError:
                    await new_sms.delete()
        except IndexError:
            await ctx.send("–ê—Ä–≥—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–∞–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ :jack_o_lantern:", delete_after=40)
        except discord.HTTPException as e:
            if e.text == 'Unknown Emoji':
                await ctx.send("–î–∏—Å–∫–æ—Ä–¥ –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≠–º–æ–¥–∑–∏ :anguished:\n–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑",
                               delete_after=30)
            else:
                pass
        except commands.errors.BadArgument:
            await ctx.send("–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å –µ—â—ë —Ä–∞–∑ :writing_hand:", delete_after=20)
        except Exception:
            await exp(ctx)
        finally:
            try:
                await asyncio.sleep(10)
                await ctx.message.delete()
            except discord.HTTPException:
                pass

    # @commands.command(name='ban', aliases=['s.b'])
    # @has_permissions(ban_members=True)
    # async def ban_(self, ctx, member: discord.Member, q: str, reason=None):
    #     try:
    #         channel_check(ctx)
    #     except ChannelException as error:
    #         await error.do(ctx)
    #         return
    #     await ctx.message.delete()
    #     dates, t, s = re.findall(r'([0-9]{1,2})([dhms]{1})', q), 0, ''
    #     t = sum(int(d[0]) * (24 * 3600 if d[1] == 'd' else 3600 if d[1] == 'h' else 60 if d[1] == 'm' else 1
    #             if d[1] == 's' else 0) for d in dates)
    #     print(t)
    #     with open(f"{ctx.guild.id}/data.json", 'r') as f:
    #         role_id = json.load(f)["ban"]
    #     if not role_id:
    #         await ctx.send('–ù–µ—Ç –æ—Å–æ–±–æ–π —Ä–æ–ª–∏ –¥–ª—è –±–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É `.s.ban.set <—Ä–æ–ª—å/–∏–º—è —Ä–æ–ª–∏>`')
    #         return
    #     ban_role = discord.utils.get(ctx.guild.roles, id=role_id)
    #     self.banned[member.id] = []
    #     for role in member.roles[1:]:
    #         self.banned[member.id].append(role)
    #         await member.remove_roles(role)
    #     await member.add_roles(ban_role)
    #     srok = f'{t // 86400}{wordend(t // 86400, "–¥–µ–Ω—å", "–¥–Ω—è", "–¥–Ω–µ–π")} {t // 3600 % 24}—á. ' \
    #         f'{t // 60 % 60}–º–∏–Ω. {t % 60}—Å–µ–∫.' if t >= 86400 else \
    #         f'{t // 3600}—á. {t // 60 % 60}–º–∏–Ω. {t % 60}—Å–µ–∫.' if t >= 3600 else \
    #         f'{t // 60}–º–∏–Ω. {t % 60}—Å–µ–∫.' if t >= 60 else f'{t}—Å–µ–∫.'
    #     r = '–±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã' if not reason else f'–ø–æ –ø—Ä–∏—á–∏–Ω–µ: **"{reason}"**'
    #     msg = await ctx.send(f':octagonal_sign: {member.mention} –ø–æ–ª—É—á–∏–ª{postix(member)} –±–∞–Ω –Ω–∞ —Å—Ä–æ–∫ `{srok}` {r}')
    #     self.banned[member.id].append(msg)
    #     await asyncio.sleep(t)
    #     await member.remove_roles(ban_role)
    #     for role in self.banned[member.id][:-1]:
    #         await member.add_roles(role)
    #     await self.banned[member.id][-1].delete()
    #     self.banned[member.id] = []
    #
    # @ban_.error
    # async def ban_error(self, ctx, error):
    #     if isinstance(error, commands.CheckFailure):
    #         pass
    #     elif isinstance(error, commands.MissingPermissions):
    #         await ctx.message.delete()
    #         await ctx.send('–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ :baby:', delete_after=40)
    #     else:
    #         await ctx.message.delete()
    #         await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ :eyes:', delete_after=40)

    # @commands.command(name='black_role', aliases=['.s.r'])
    # @has_permissions(administrator=True)
    # async def black_role_(self, ctx, role: discord.Role):
    #     try:
    #         channel_check(ctx)
    #     except ChannelException as error:
    #         await error.do(ctx)
    #         return
    #     await ctx.message.delete()
    #     d = data_read(ctx.guild)
    #     d['ban_role'] = role.id
    #     data_write(ctx.guild, d)
    #
    # @black_role_.error
    # async def black_role_error(self, ctx, error):
    #     if isinstance(error, commands.MissingPermissions):
    #         await ctx.message.delete()
    #         await ctx.send('–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ :baby:', delete_after=40)
    #     else:
    #         await ctx.message.delete()
    #         await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ :eyes:', delete_after=40)
    #
    # @commands.command(name='unban', aliases=['s.ub'])
    # @commands.check(channel_check)
    # @has_permissions(ban_members=True)
    # async def unban_(self, ctx, member: discord.Member):
    #     await ctx.message.delete()
    #     with open(f"{ctx.guild.id}/data.json", 'r') as f:
    #         role_id = json.load(f)["ban"]
    #     if not role_id:
    #         await ctx.send('–ù–µ—Ç –æ—Å–æ–±–æ–π —Ä–æ–ª–∏ –¥–ª—è –±–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É `.s.ban.set <—Ä–æ–ª—å/–∏–º—è —Ä–æ–ª–∏>`')
    #         return
    #     ban_role = discord.utils.get(ctx.guild.roles, id=role_id)
    #     await member.remove_roles(ban_role)
    #     for role in self.banned[member.id][:-1]:
    #         await member.add_roles(role)
    #     await self.banned[member.id][-1].delete()
    #     self.banned[member.id] = []
    #
    # @unban_.error
    # async def unban_error(self, ctx, error):
    #     if isinstance(error, commands.CheckFailure):
    #         pass
    #     elif isinstance(error, commands.MissingPermissions):
    #         await ctx.message.delete()
    #         await ctx.send('–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ :baby:', delete_after=40)
    #     else:
    #         await ctx.message.delete()
    #         await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ :eyes:', delete_after=40)

    @commands.command(name='channels', aliases=['s.c'])
    @has_permissions(administrator=True)
    async def channels_(self, ctx, *chans: discord.TextChannel):
        await ctx.message.delete()
        if not chans:
            d = data_read(ctx.guild)
            d['channels'] = []
            data_write(ctx.guild, d)
            await ctx.send('–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤ –ª—é–±–æ–º —á–∞—Ç–µ :hugging:', delete_after=20)
            return
        d = data_read(ctx.guild)
        d['channels'] = [chan.id for chan in chans]
        data_write(ctx.guild, d)
        await ctx.send(f'–≠—Ç{wordend(len(chans), "–æ—Ç", "–∏", "–∏")} {len(chans)} –∫–∞–Ω–∞–ª{wordend(len(chans), "", "–∞", "–æ–≤")}'
                       f' —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω{wordend(len(chans), "", "—ã", "—ã")} –∫–∞–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ :thumbsup::thumbsup:',
                       delete_after=40)

    @channels_.error
    async def channels_error(self, ctx, error):
        if isinstance(error, errors.BadArgument):
            await ctx.send('–£–∫–∞–∑–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–µ–π –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ :monkey:', delete_after=40)
        elif isinstance(error, errors.MissingPermissions):
            await ctx.send('–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ :baby:', delete_after=40)
        else:
            await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ :eyes:', delete_after=40)

    @commands.command(name='edit.notice')
    @has_permissions(administrator=True)
    async def notice_(self, ctx):
        channel_check(ctx)
        await ctx.message.delete()
        d = data_read(ctx.guild)
        d['notice'] = not d['notice']
        data_write(ctx.guild, d)
        await ctx.send(f'–ù–∞—Å—Ç—Ä–æ–π–∫–∞ `—É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª` –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞  [ {int(d["notice"])} ]  :thumbsup:', delete_after=20)

    @notice_.error
    async def notice_error(self, ctx, error):
        if isinstance(error, errors.MissingPermissions):
            await ctx.message.delete()
            await ctx.send('–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ :baby:', delete_after=10)
        elif isinstance(error, ChannelException):
            await error.do(ctx)
        else:
            traceback.print_exc()
            await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ :eyes:', delete_after=10)

    @commands.command(name='edit.now')
    @has_permissions(administrator=True)
    async def now_(self, ctx):
        channel_check(ctx)
        await ctx.message.delete()
        d = data_read(ctx.guild)
        d['now'] = not d['now']
        data_write(ctx.guild, d)
        await ctx.send(f'–ù–∞—Å—Ç—Ä–æ–π–∫–∞ `—Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç` –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞  [ {int(d["now"])} ]  :thumbsup:', delete_after=20)

    @now_.error
    async def now_error(self, ctx, error):
        if isinstance(error, errors.MissingPermissions):
            await ctx.message.delete()
            await ctx.send('–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ :baby:', delete_after=10)
        elif isinstance(error, ChannelException):
            await error.do(ctx)
        else:
            traceback.print_exc()
            await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ :eyes:')

    @commands.command(name='edit.count')
    @has_permissions(administrator=True)
    async def count_(self, ctx, *, n: int):
        channel_check(ctx)
        await ctx.message.delete()
        d = data_read(ctx.guild)
        if n < 5 or n > 10:
            raise commands.errors.BadArgument
        d['count'] = n
        data_write(ctx.guild, d)
        await ctx.send(f'–ù–∞—Å—Ç—Ä–æ–π–∫–∞ `–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π` –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞  [ {n} ]  :thumbsup:', delete_after=20)

    @count_.error
    async def count_error(self, ctx, error):
        if isinstance(error, errors.MissingPermissions):
            await ctx.message.delete()
            await ctx.send('–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ :baby:', delete_after=10)
        elif isinstance(error, commands.errors.BadArgument):
            await ctx.send(f'{ctx.message.content.replace(".edit.count ", "")} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º –º–µ–∂–¥—É 5 –∏ 10')
        elif isinstance(error, ChannelException):
            await error.do(ctx)
        else:
            await exp(ctx)

    @commands.command(name='server_help', aliases=['s.h'])
    async def server_help_(self, ctx):
        try:
            channel_check(ctx)
        except ChannelException as error:
            await error.do(ctx)
            return
        embed = discord.Embed(
            colour=discord.Colour.from_rgb(r=30, g=144, b=255),
            description=':fox:`.set_roles` - —Å–æ–∑–¥–∞–º –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –ø–æ—Å—Ç, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ '
                        '—Å–º–æ–≥—É—Ç —Å–∞–º–∏ –≤—ã–±–∏—Ä–∞—Ç—å —Å–µ–±–µ —Ä–æ–ª–∏ –≤—Å–µ–≥–æ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –≠–º–æ–¥–∑–∏. –î–ª—è —ç—Ç–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ'
                        ' –±—ã—Ç—å —Ç–∞–∫–æ–≥–æ –≤–∏–¥–∞: `.set_roles @<—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏> <–ª—é–±–æ–µ –≠–º–æ–¥–∑–∏> \"<–û–ø–∏—Å–∞–Ω–∏–µ>\"`. –û–ø–∏—Å–∞–Ω–∏–µ '
                        '—Ä–æ–ª–∏ –ø–æ –∂–µ–ª–∞–Ω–∏—é, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–µ–π –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ. *–£–±–µ–¥–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞ —á—Ç–æ –º–æ—è —Ä–æ–ª—å* '
                        '*—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –≤—ã—à–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, —Ç–∞–∫–æ–≤—ã —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –î–∏—Å–∫–æ—Ä–¥–∞.*\n'
                        ':male_sign:`.set_genders` - —É—Å—Ç–∞–Ω–∞–≤–ª—é —Å–≤—è–∑—å –º–µ–∂–¥—É –ø–æ–ª–æ–≤—ã–º–∏ —Ä–æ–ª—è–º–∏ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ '
                        '—Å–µ—Ä–≤–µ—Ä–∞. –í –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥–∞–π –ª–∏–±–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è 2-—Ö —Ä–æ–ª–µ–π –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —á—Ç–æ –º–æ—è —Ä–æ–ª—å –≤—ã—à–µ '
                        '–∏—Ö –æ–±–æ–∏—Ö, –ª–∏–±–æ 2 —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—É—Å—Ç—è—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Ä–æ–ª–µ–π —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∏–º '
                        '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è–º. –ú–æ–∂–µ—à—å –≤–æ–æ–±—â–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –Ω–∏—á–µ–≥–æ –∏ —Ç–æ–≥–¥–∞ –Ω–æ–≤—ã–µ —Ä–æ–ª–∏ –±—É–¥—É—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫: '
                        '‚ôÇ –∏ ‚ôÄ. *–ü–æ—Ä—è–¥–æ–∫ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –≤—Å–µ–≥–¥–∞ —Ç–∞–∫–æ–π: —Å–Ω–∞—á–∞–ª–∞ –¥–ª—è –º—É–∂—Å–∫–æ–π —Ä–æ–ª–∏, –∑–∞—Ç–µ–º –¥–ª—è –∂–µ–Ω—Å–∫–æ–π*\n'
                        ':shield:`.channels` - –æ–ø—Ä–µ–¥–µ–ª—é –¥–ª—è —Å–µ–±—è –Ω–∞ –∫–∞–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö —è –º–æ–≥—É –≤–µ—Å—Ç–∏ '
                        '—Ä–∞–±–æ—Ç—É, –∞ –Ω–∞ –∫–∞–∫–∏—Ö –Ω–µ—Ç. –î–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–¥–∞–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ (—Å –ø–æ–º–æ—â—å—é '
                        '\'#\'), –ª–∏–±–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π –Ω–∏—á–µ–≥–æ, –∏ —Ç–æ–≥–¥–∞ —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –¥–ª—è –º–µ–Ω—è –∫–∞–Ω–∞–ª–æ–≤ —Å—Ç–∞–Ω–µ—Ç –ø—É—Å—Ç—ã–º.\n'
                        ':arrows_counterclockwise:`.edit.notice` - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∫–æ–≥–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–∫–∏–¥–∞–µ—Ç '
                        '–≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª - —è –ø—Ä–∏—Å—ã–ª–∞—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—Ä–µ–º–µ–Ω–∏ –µ–≥–æ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –Ω–∞ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ. –≠—Ç—É –æ–ø—Ü–∏—é '
                        '–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ —Ä–∞–∑ —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n'
                        ':arrows_counterclockwise:`.edit.now` - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∫–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä–∞—Ç—å –Ω–æ–≤–∞—è –ø–µ—Å–Ω—è - —è '
                        '–ø–∏—à—É –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–π –ø–µ—Å–Ω–∏. –≠—Ç—É –æ–ø—Ü–∏—é –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ —Ä–∞–∑ —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n'
                        ':five:`.edit.count` - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –ª–∏—à—å –ø–µ—Ä–≤—ã–µ 5 —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π.'
                        ' –¢—ã –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ª—é–±–æ–µ —á–∏—Å–ª–æ –æ—Ç 5 –¥–æ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.'
        )
        embed.set_author(name='–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã',
                         icon_url='https://cdn.discordapp.com/avatars/'
                                  '669163733473296395/89d3cf65e539aaba9e6d1669d32b1ea7.webp?size=1024')
        await ctx.send(embed=embed, delete_after=3600)


def setup(client):
    client.add_cog(Serv(client))
